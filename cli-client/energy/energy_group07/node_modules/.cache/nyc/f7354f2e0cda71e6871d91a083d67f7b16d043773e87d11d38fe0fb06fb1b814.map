{"version":3,"file":"/home/vangelis/TL19-07/cli-client/energy/energy_group07/src/commands/Admin.ts","sources":["/home/vangelis/TL19-07/cli-client/energy/energy_group07/src/commands/Admin.ts"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cli_ux_1 = require(\"cli-ux\");\n// just prompt for input\nconst command_1 = require(\"@oclif/command\");\nconst command_2 = require(\"@oclif/command\");\nconst bcrypt = require('bcrypt');\nvar fs = require('fs');\nconst https = require('https');\nconst axios = require('axios');\nconst client_cert = fs.readFileSync('ca-crt.pem');\naxios.defaults.httpsAgent = new https.Agent({ ca: client_cert, keepAlive: true });\nclass AdminCommand extends command_1.Command {\n    async run() {\n        const { flags } = this.parse(AdminCommand);\n        var fs = require('fs');\n        var jwt = require('jsonwebtoken');\n        var token = fs.readFileSync('softeng19bAPI.token', 'utf-8');\n        axios.defaults.headers.common['X-OBSERVATORY-AUTH'] = token;\n        await cli_ux_1.default.anykey();\n        //create new user\n        if (`${flags.newuser}` !== \"undefined\" && `${flags.passw}` !== \"undefined\" && `${flags.email}` !== \"undefined\" && `${flags.quota}` !== \"undefined\") {\n            let hash = bcrypt.hashSync(`${flags.passw}`, 10);\n            let body = new Object({\n                username: `${flags.newuser}`,\n                passw: `${flags.passw}`,\n                email: `${flags.email}`,\n                quota: `${flags.quota}`\n            });\n            await axios.post('https://localhost:8765/energy/api/Admin/users', body);\n        }\n        //modify user\n        else if (`${flags.moduser}` !== \"undefined\" && `${flags.passw}` !== \"undefined\" && `${flags.email}` !== \"undefined\" && `${flags.quota}` !== \"undefined\") {\n            let body = new Object({\n                username: `${flags.moduser}`,\n                passw: `${flags.passw}`,\n                email: `${flags.email}`,\n                quota: `${flags.quota}`\n            });\n            await axios.put('https://localhost:8765/energy/api/Admin/users/' + `${flags.moduser}`, body);\n        }\n        //get userstatus\n        else if (`${flags.userstatus}` !== \"undefined\") {\n            const data = await axios.get('https://localhost:8765/energy/api/Admin/users/' + `${flags.userstatus}`);\n            console.log(data.data);\n        }\n        //insert new data\n        else if (`${flags.newdata}` !== \"undefined\" && `${flags.source}` !== \"undefined\") {\n            var csv = require('csv-parser');\n            var FormData = require('form-data');\n            const form_data = new FormData();\n            var data = [];\n            form_data.append(\"file\", fs.createReadStream(`${flags.source}`));\n            form_data.pipe(csv()).on('data', function (row) { data.push(row); }).on('end', function () { console.log('Data Loaded'); });\n            let header = form_data.getHeaders();\n            const config = {\n                method: 'POST',\n                port: 8765,\n                headers: {\n                    \"x-observatory-auth\": token,\n                    header\n                },\n                maxContentLength: 524228890\n            };\n            return await axios.post('https://localhost:8765/energy/api/Admin/' + `${flags.newdata}`, form_data, config);\n        }\n        else\n            console.log(\"Unsuccesful\" + `${flags.newuser}`, `${flags.passw}`, `${flags.email}`, `${flags.quota}`);\n    }\n}\nexports.AdminCommand = AdminCommand;\nAdminCommand.flags = {\n    newuser: command_2.flags.string({ dependsOn: ['passw'], exclusive: ['newdata', 'userstatus', 'moduser'] }),\n    moduser: command_2.flags.string({ dependsOn: ['passw'], exclusive: ['newuser', 'newdata', 'userstatus'] }),\n    passw: command_2.flags.string({ dependsOn: ['email'] }),\n    email: command_2.flags.string({ dependsOn: ['quota'] }),\n    quota: command_2.flags.string(),\n    userstatus: command_2.flags.string({ exclusive: ['newdata', 'newuser', 'moduser'] }),\n    newdata: command_2.flags.string({ dependsOn: ['source'], exclusive: ['userstatus', 'newuser', 'moduser'] }),\n    source: command_2.flags.string()\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"]}