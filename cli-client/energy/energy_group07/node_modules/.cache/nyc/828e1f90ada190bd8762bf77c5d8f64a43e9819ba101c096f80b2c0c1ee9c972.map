{"version":3,"file":"/home/vangelis/TL19-07/cli-client/energy/energy_group07/src/commands/ActualvsForecast.ts","sources":["/home/vangelis/TL19-07/cli-client/energy/energy_group07/src/commands/ActualvsForecast.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,MAAM,SAAS,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC5C,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AACjC,MAAM,SAAS,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC5C,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC/B,MAAM,WAAW,GAAG,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;AAClD,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,WAAW,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;AAC5F,MAAM,uBAAwB,SAAQ,SAAS,CAAC,OAAO;IACnD,KAAK,CAAC,GAAG;QACL,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;QAC/B,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;QACtD,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,KAAK,GAAG,EAAE,CAAC,YAAY,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAAC;QAC5D,MAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;QACjC,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,KAAK,WAAW,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;YAC3F,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;aACpC,IAAI,GAAG,KAAK,CAAC,KAAK,EAAE,KAAK,WAAW,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,KAAK,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;YAC/F,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;aACpC,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,KAAK,WAAW,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;YAC1F,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;QACzC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,oBAAoB,CAAC,GAAG,KAAK,CAAC;QAC5D,iCAAiC;QACjC,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,KAAK,WAAW,EAAE;YACjC,IAAI,QAAQ,GAAG,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAC7C,gNAAgN;YAChN,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,IAAI,WAAW,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,IAAI,MAAM,EAAE;gBACjE,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,qDAAqD,GAAG,GAAG,KAAK,CAAC,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC,OAAO,EAAE,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC1B;iBACI,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,IAAI,KAAK,EAAE;gBACjC,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,qDAAqD,GAAG,GAAG,KAAK,CAAC,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC,OAAO,EAAE,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;gBACnO,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC1B;;gBAEG,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;SAC7C;aACI,IAAI,GAAG,KAAK,CAAC,KAAK,EAAE,KAAK,WAAW,EAAE;YACvC,IAAI,QAAQ,GAAG,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAC9C,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,IAAI,WAAW,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,IAAI,MAAM,EAAE;gBACjE,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,qDAAqD,GAAG,GAAG,KAAK,CAAC,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC,OAAO,EAAE,GAAG,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/K,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC1B;iBACI,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,IAAI,KAAK,EAAE;gBACjC,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,qDAAqD,GAAG,GAAG,KAAK,CAAC,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC,OAAO,EAAE,GAAG,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;gBAChN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC1B;;gBAEG,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;SAC7C;aACI,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,KAAK,WAAW,EAAE;YACtC,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,IAAI,WAAW,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,IAAI,MAAM,EAAE;gBACjE,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,qDAAqD,GAAG,GAAG,KAAK,CAAC,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC,OAAO,EAAE,GAAG,QAAQ,GAAG,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC9J,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC1B;iBACI,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,IAAI,KAAK,EAAE;gBACjC,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,qDAAqD,GAAG,GAAG,KAAK,CAAC,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC,OAAO,EAAE,GAAG,QAAQ,GAAG,GAAG,KAAK,CAAC,IAAI,EAAE,GAAG,UAAU,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;gBAC/L,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC1B;;gBAEG,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;SAC7C;;YAEG,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;IAC9C,CAAC;CACJ;AACD,OAAO,CAAC,uBAAuB,GAAG,uBAAuB,CAAC;AAC1D,uBAAuB,CAAC,KAAK,GAAG;IAC5B,IAAI,EAAE,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;IAChD,OAAO,EAAE,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE,CAAC;IACzE,IAAI,EAAE,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE;IAC9B,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE;IAC/B,IAAI,EAAE,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE;IAC9B,MAAM,EAAE,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,CAAC;CAC/D,CAAC","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst command_1 = require(\"@oclif/command\");\nconst axios_1 = require(\"axios\");\nconst command_2 = require(\"@oclif/command\");\nvar fs = require('fs');\nconst https = require('https');\nconst client_cert = fs.readFileSync('ca-crt.pem');\naxios_1.default.defaults.httpsAgent = new https.Agent({ ca: client_cert, keepAlive: true });\nclass ActualvsForecastCommand extends command_1.default {\n    async run() {\n        const axios = require('axios');\n        const { flags } = this.parse(ActualvsForecastCommand);\n        var fs = require('fs');\n        var token = fs.readFileSync('softeng19bAPI.token', 'utf-8');\n        const moment = require('moment');\n        if (`${flags.date}` !== \"undefined\" && !(moment(`${flags.date}`, 'YYYY-MM-DD', true).isValid()))\n            throw new Error(\"Wrong date format\");\n        else if (`${flags.month}` !== \"undefined\" && !(moment(`${flags.month}`, 'YYYY-MM', true).isValid()))\n            throw new Error(\"Wrong date format\");\n        else if (`${flags.year}` !== \"undefined\" && !(moment(`${flags.year}`, 'YYYY', true).isValid()))\n            throw new Error(\"Wrong date format\");\n        axios.defaults.headers.common['X-OBSERVATORY-AUTH'] = token;\n        //console.log(`${flags.format}`);\n        if (`${flags.date}` !== \"undefined\") {\n            var splitted = `${flags.date}`.split(\"-\", 3);\n            // console.log('https://localhost:8765/energy/api/ActualvsForecast/' +`${flags.area}` +'/' + `${flags.timeres}` +'/date/' + splitted[0] +'-' + splitted[1] + '-' + splitted[2]+ \"?format=\" + `${flags.format}`);\n            if (`${flags.format}` == \"undefined\" || `${flags.format}` == \"json\") {\n                const data = await axios.get('https://localhost:8765/energy/api/ActualvsForecast/' + `${flags.area}` + '/' + `${flags.timeres}` + '/date/' + splitted[0] + '-' + splitted[1] + '-' + splitted[2]);\n                console.log(data.data);\n            }\n            else if (`${flags.format}` == \"csv\") {\n                const data = await axios.get('https://localhost:8765/energy/api/ActualvsForecast/' + `${flags.area}` + '/' + `${flags.timeres}` + '/date/' + splitted[0] + '-' + splitted[1] + '-' + splitted[2] + \"?format=\" + `${flags.format}`);\n                console.log(data.data);\n            }\n            else\n                console.log(\"Error 400: Bad Request\");\n        }\n        else if (`${flags.month}` !== \"undefined\") {\n            var splitted = `${flags.month}`.split(\"-\", 2);\n            if (`${flags.format}` == \"undefined\" || `${flags.format}` == \"json\") {\n                const data = await axios.get('https://localhost:8765/energy/api/ActualvsForecast/' + `${flags.area}` + '/' + `${flags.timeres}` + '/month/' + splitted[0] + '-' + splitted[1]);\n                console.log(data.data);\n            }\n            else if (`${flags.format}` == \"csv\") {\n                const data = await axios.get('https://localhost:8765/energy/api/ActualvsForecast/' + `${flags.area}` + '/' + `${flags.timeres}` + '/month/' + splitted[0] + '-' + splitted[1] + \"?format=\" + `${flags.format}`);\n                console.log(data.data);\n            }\n            else\n                console.log(\"Error 400: Bad Request\");\n        }\n        else if (`${flags.year}` !== \"undefined\") {\n            if (`${flags.format}` == \"undefined\" || `${flags.format}` == \"json\") {\n                const data = await axios.get('https://localhost:8765/energy/api/ActualvsForecast/' + `${flags.area}` + '/' + `${flags.timeres}` + '/year/' + `${flags.year}`);\n                console.log(data.data);\n            }\n            else if (`${flags.format}` == \"csv\") {\n                const data = await axios.get('https://localhost:8765/energy/api/ActualvsForecast/' + `${flags.area}` + '/' + `${flags.timeres}` + '/year/' + `${flags.year}` + \"?format=\" + `${flags.format}`);\n                console.log(data.data);\n            }\n            else\n                console.log(\"Error 400: Bad Request\");\n        }\n        else\n            console.log(\"Error 400: Bad Request\");\n    }\n}\nexports.ActualvsForecastCommand = ActualvsForecastCommand;\nActualvsForecastCommand.flags = {\n    area: command_2.flags.string({ multiple: true }),\n    timeres: command_2.flags.string({ options: ['PT15M', 'PT30M', 'PT60M'] }),\n    date: command_2.flags.string(),\n    month: command_2.flags.string(),\n    year: command_2.flags.string(),\n    format: command_2.flags.string({ options: ['json', 'csv'] })\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"]}