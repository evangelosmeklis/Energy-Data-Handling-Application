{"version":3,"file":"/home/vangelis/TL19-07/cli-client/energy/energy_group07/src/commands/Admin.ts","sources":["/home/vangelis/TL19-07/cli-client/energy/energy_group07/src/commands/Admin.ts"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// just prompt for input\nconst command_1 = require(\"@oclif/command\");\nconst command_2 = require(\"@oclif/command\");\nconst bcrypt = require('bcrypt');\nvar fs = require('fs');\nconst https = require('https');\nconst axios = require('axios');\nconst client_cert = fs.readFileSync('ca-crt.pem');\nvar colors = require('colors');\naxios.defaults.httpsAgent = new https.Agent({ ca: client_cert, keepAlive: true });\nclass AdminCommand extends command_1.Command {\n    async run() {\n        const { flags } = this.parse(AdminCommand);\n        var fs = require('fs');\n        var jwt = require('jsonwebtoken');\n        var token = fs.readFileSync('softeng19bAPI.token', 'utf-8');\n        axios.defaults.headers.common['X-OBSERVATORY-AUTH'] = token;\n        //await cli.anykey();\n        //create new user\n        if (`${flags.newuser}` !== \"undefined\" && `${flags.passw}` !== \"undefined\" && `${flags.email}` !== \"undefined\" && `${flags.quota}` !== \"undefined\") {\n            let hash = bcrypt.hashSync(`${flags.passw}`, 10);\n            let body = new Object({\n                username: `${flags.newuser}`,\n                passw: `${flags.passw}`,\n                email: `${flags.email}`,\n                quota: `${flags.quota}`\n            });\n            await axios.post('https://localhost:8765/energy/api/Admin/users', body);\n            console.log(\"User inserted succesfully\");\n        }\n        //modify user\n        else if (`${flags.moduser}` !== \"undefined\" && `${flags.passw}` !== \"undefined\" && `${flags.email}` !== \"undefined\" && `${flags.quota}` !== \"undefined\") {\n            let body = new Object({\n                username: `${flags.moduser}`,\n                passw: `${flags.passw}`,\n                email: `${flags.email}`,\n                quota: `${flags.quota}`\n            });\n            await axios.put('https://localhost:8765/energy/api/Admin/users/' + `${flags.moduser}`, body);\n            console.log('User modified succesfully');\n        }\n        //get userstatus\n        else if (`${flags.userstatus}` !== \"undefined\") {\n            const data = await axios.get('https://localhost:8765/energy/api/Admin/users/' + `${flags.userstatus}`);\n            console.log(data.data);\n        }\n        //insert new data\n        else if (`${flags.newdata}` !== \"undefined\" && `${flags.source}` !== \"undefined\") {\n            var csv = require('csv-parser');\n            var FormData = require('form-data');\n            const form_data = new FormData();\n            var data = [];\n            form_data.append(\"file\", fs.createReadStream(`${flags.source}`));\n            form_data.pipe(csv()).on('data', function (row) { data.push(row); }).on('end', function () { console.log('Data Loaded'); });\n            let header = form_data.getHeaders();\n            const config = {\n                method: 'POST',\n                port: 8765,\n                headers: {\n                    \"x-observatory-auth\": token,\n                    header\n                },\n                maxContentLength: 524228890\n            };\n            return await axios.post('https://localhost:8765/energy/api/Admin/' + `${flags.newdata}`, form_data, config);\n        }\n        else\n            console.log(\"Unsuccesful\" + `${flags.newuser}`, `${flags.passw}`, `${flags.email}`, `${flags.quota}`);\n    }\n}\nexports.AdminCommand = AdminCommand;\nAdminCommand.flags = {\n    newuser: command_2.flags.string({ dependsOn: ['passw'], exclusive: ['newdata', 'userstatus', 'moduser'] }),\n    moduser: command_2.flags.string({ dependsOn: ['passw'], exclusive: ['newuser', 'newdata', 'userstatus'] }),\n    passw: command_2.flags.string({ dependsOn: ['email'] }),\n    email: command_2.flags.string({ dependsOn: ['quota'] }),\n    quota: command_2.flags.string(),\n    userstatus: command_2.flags.string({ exclusive: ['newdata', 'newuser', 'moduser'] }),\n    newdata: command_2.flags.string({ dependsOn: ['source'], exclusive: ['userstatus', 'newuser', 'moduser'] }),\n    source: command_2.flags.string()\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvdmFuZ2VsaXMvVEwxOS0wNy9jbGktY2xpZW50L2VuZXJneS9lbmVyZ3lfZ3JvdXAwNy9zcmMvY29tbWFuZHMvQWRtaW4udHMiLCJzb3VyY2VzIjpbIi9ob21lL3ZhbmdlbGlzL1RMMTktMDcvY2xpLWNsaWVudC9lbmVyZ3kvZW5lcmd5X2dyb3VwMDcvc3JjL2NvbW1hbmRzL0FkbWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0Esd0JBQXdCO0FBQ3hCLDRDQUFzQztBQUV0Qyw0Q0FBcUM7QUFDckMsTUFBTSxNQUFNLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ2pDLElBQUksRUFBRSxHQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNyQixNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUE7QUFDOUIsTUFBTSxLQUFLLEdBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQzdCLE1BQU0sV0FBVyxHQUFHLEVBQUUsQ0FBQyxZQUFZLENBQUMsWUFBWSxDQUFDLENBQUE7QUFDakQsSUFBSSxNQUFNLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQy9CLEtBQUssQ0FBQyxRQUFRLENBQUMsVUFBVSxHQUFHLElBQUksS0FBSyxDQUFDLEtBQUssQ0FBQyxFQUFDLEVBQUUsRUFBRyxXQUFXLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBQyxDQUFDLENBQUE7QUFDaEYsTUFBYSxZQUFhLFNBQVEsaUJBQU87SUFXdkMsS0FBSyxDQUFDLEdBQUc7UUFDUCxNQUFNLEVBQUMsS0FBSyxFQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUM1QyxJQUFJLEVBQUUsR0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckIsSUFBSSxHQUFHLEdBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ2hDLElBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQyxZQUFZLENBQUMscUJBQXFCLEVBQUMsT0FBTyxDQUFDLENBQUM7UUFDM0QsS0FBSyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLG9CQUFvQixDQUFDLEdBQUMsS0FBSyxDQUFDO1FBQzFELHFCQUFxQjtRQUNyQixpQkFBaUI7UUFDakIsSUFBSSxHQUFHLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxXQUFXLElBQUksR0FBRyxLQUFLLENBQUMsS0FBSyxFQUFFLEtBQUssV0FBVyxJQUFJLEdBQUcsS0FBSyxDQUFDLEtBQUssRUFBRSxLQUFLLFdBQVcsSUFBSSxHQUFHLEtBQUssQ0FBQyxLQUFLLEVBQUUsS0FBSyxXQUFXLEVBQUU7WUFDbEosSUFBSSxJQUFJLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxHQUFHLEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBQyxFQUFFLENBQUMsQ0FBQztZQUNoRCxJQUFJLElBQUksR0FBRyxJQUFJLE1BQU0sQ0FBRTtnQkFDdEIsUUFBUSxFQUFFLEdBQUcsS0FBSyxDQUFDLE9BQU8sRUFBRTtnQkFDNUIsS0FBSyxFQUFFLEdBQUcsS0FBSyxDQUFDLEtBQUssRUFBRTtnQkFDdkIsS0FBSyxFQUFFLEdBQUcsS0FBSyxDQUFDLEtBQUssRUFBRTtnQkFDdkIsS0FBSyxFQUFFLEdBQUcsS0FBSyxDQUFDLEtBQUssRUFBRTthQUN2QixDQUFDLENBQUE7WUFDRixNQUFNLEtBQUssQ0FBQyxJQUFJLENBQUMsK0NBQStDLEVBQUMsSUFBSSxDQUFDLENBQUM7WUFDdkUsT0FBTyxDQUFDLEdBQUcsQ0FBQywyQkFBMkIsQ0FBQyxDQUFDO1NBRTFDO1FBRUQsYUFBYTthQUNSLElBQUksR0FBRyxLQUFLLENBQUMsT0FBTyxFQUFFLEtBQUssV0FBVyxJQUFJLEdBQUcsS0FBSyxDQUFDLEtBQUssRUFBRSxLQUFLLFdBQVcsSUFBSSxHQUFHLEtBQUssQ0FBQyxLQUFLLEVBQUUsS0FBSyxXQUFXLElBQUksR0FBRyxLQUFLLENBQUMsS0FBSyxFQUFFLEtBQUssV0FBVyxFQUFFO1lBQ3hKLElBQUksSUFBSSxHQUFHLElBQUksTUFBTSxDQUFFO2dCQUNyQixRQUFRLEVBQUUsR0FBRyxLQUFLLENBQUMsT0FBTyxFQUFFO2dCQUM1QixLQUFLLEVBQUUsR0FBRyxLQUFLLENBQUMsS0FBSyxFQUFFO2dCQUN2QixLQUFLLEVBQUUsR0FBRyxLQUFLLENBQUMsS0FBSyxFQUFFO2dCQUN2QixLQUFLLEVBQUUsR0FBRyxLQUFLLENBQUMsS0FBSyxFQUFFO2FBQ3hCLENBQUMsQ0FBQTtZQUNGLE1BQU0sS0FBSyxDQUFDLEdBQUcsQ0FBQyxnREFBZ0QsR0FBRSxHQUFHLEtBQUssQ0FBQyxPQUFPLEVBQUUsRUFBQyxJQUFJLENBQUMsQ0FBQztZQUMzRixPQUFPLENBQUMsR0FBRyxDQUFDLDJCQUEyQixDQUFDLENBQUM7U0FDekM7UUFHRCxnQkFBZ0I7YUFDWCxJQUFJLEdBQUcsS0FBSyxDQUFDLFVBQVUsRUFBRSxLQUFLLFdBQVcsRUFBQztZQUM5QyxNQUFNLElBQUksR0FBQyxNQUFNLEtBQUssQ0FBQyxHQUFHLENBQUMsZ0RBQWdELEdBQUUsR0FBRyxLQUFLLENBQUMsVUFBVSxFQUFFLENBQUMsQ0FBQztZQUNwRyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUN2QjtRQUdELGlCQUFpQjthQUNaLElBQUksR0FBRyxLQUFLLENBQUMsT0FBTyxFQUFFLEtBQUssV0FBVyxJQUFJLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxLQUFLLFdBQVcsRUFBRTtZQUNqRixJQUFJLEdBQUcsR0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7WUFDOUIsSUFBSSxRQUFRLEdBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1lBQ2xDLE1BQU0sU0FBUyxHQUFHLElBQUksUUFBUSxFQUFFLENBQUM7WUFDakMsSUFBSSxJQUFJLEdBQUcsRUFBRSxDQUFDO1lBQ2QsU0FBUyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLGdCQUFnQixDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQztZQUNqRSxTQUFTLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBQyxVQUFTLEdBQU8sSUFBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBQyxjQUFXLE9BQU8sQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLENBQUEsQ0FBQSxDQUFDLENBQUMsQ0FBQztZQUN0SCxJQUFJLE1BQU0sR0FBRyxTQUFTLENBQUMsVUFBVSxFQUFFLENBQUM7WUFDcEMsTUFBTSxNQUFNLEdBQUc7Z0JBQ2QsTUFBTSxFQUFFLE1BQU07Z0JBQ2QsSUFBSSxFQUFDLElBQUk7Z0JBQ1QsT0FBTyxFQUFFO29CQUNSLG9CQUFvQixFQUFDLEtBQUs7b0JBQzFCLE1BQU07aUJBQ047Z0JBQ0EsZ0JBQWdCLEVBQUMsU0FBUzthQUMzQixDQUFDO1lBRUYsT0FBTyxNQUFNLEtBQUssQ0FBQyxJQUFJLENBQUMsMENBQTBDLEdBQUcsR0FBRyxLQUFLLENBQUMsT0FBTyxFQUFFLEVBQUUsU0FBUyxFQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQzNHOztZQUNJLE9BQU8sQ0FBQyxHQUFHLENBQUMsYUFBYSxHQUFHLEdBQUcsS0FBSyxDQUFDLE9BQU8sRUFBRSxFQUFDLEdBQUcsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFDLEdBQUcsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFDLEdBQUcsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDdkcsQ0FBQzs7QUExRUgsb0NBMkVDO0FBMUVRLGtCQUFLLEdBQUc7SUFDYixPQUFPLEVBQUUsZUFBSyxDQUFDLE1BQU0sQ0FBQyxFQUFDLFNBQVMsRUFBQyxDQUFDLE9BQU8sQ0FBQyxFQUFDLFNBQVMsRUFBQyxDQUFDLFNBQVMsRUFBQyxZQUFZLEVBQUMsU0FBUyxDQUFDLEVBQUMsQ0FBQztJQUN6RixPQUFPLEVBQUUsZUFBSyxDQUFDLE1BQU0sQ0FBQyxFQUFDLFNBQVMsRUFBQyxDQUFDLE9BQU8sQ0FBQyxFQUFDLFNBQVMsRUFBQyxDQUFDLFNBQVMsRUFBQyxTQUFTLEVBQUMsWUFBWSxDQUFDLEVBQUMsQ0FBQztJQUN6RixLQUFLLEVBQUUsZUFBSyxDQUFDLE1BQU0sQ0FBQyxFQUFDLFNBQVMsRUFBQyxDQUFDLE9BQU8sQ0FBQyxFQUFDLENBQUM7SUFDMUMsS0FBSyxFQUFFLGVBQUssQ0FBQyxNQUFNLENBQUMsRUFBQyxTQUFTLEVBQUMsQ0FBQyxPQUFPLENBQUMsRUFBQyxDQUFDO0lBQzFDLEtBQUssRUFBRSxlQUFLLENBQUMsTUFBTSxFQUFFO0lBQ3JCLFVBQVUsRUFBRSxlQUFLLENBQUMsTUFBTSxDQUFDLEVBQUMsU0FBUyxFQUFDLENBQUMsU0FBUyxFQUFDLFNBQVMsRUFBQyxTQUFTLENBQUMsRUFBQyxDQUFDO0lBQ3JFLE9BQU8sRUFBRSxlQUFLLENBQUMsTUFBTSxDQUFDLEVBQUMsU0FBUyxFQUFDLENBQUMsUUFBUSxDQUFDLEVBQUMsU0FBUyxFQUFDLENBQUMsWUFBWSxFQUFDLFNBQVMsRUFBQyxTQUFTLENBQUMsRUFBQyxDQUFDO0lBQzFGLE1BQU0sRUFBRSxlQUFLLENBQUMsTUFBTSxFQUFFO0NBQ3ZCLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2xpIGZyb20gJ2NsaS11eCdcbi8vIGp1c3QgcHJvbXB0IGZvciBpbnB1dFxuaW1wb3J0IHtDb21tYW5kfSBmcm9tICdAb2NsaWYvY29tbWFuZCdcbmltcG9ydCB7Y3JlYXRlQ29ubmVjdGlvbn0gZnJvbSBcInR5cGVvcm1cIjtcbmltcG9ydCB7ZmxhZ3N9IGZyb20gICdAb2NsaWYvY29tbWFuZCdcbmNvbnN0IGJjcnlwdCA9IHJlcXVpcmUoJ2JjcnlwdCcpO1xudmFyIGZzPXJlcXVpcmUoJ2ZzJyk7XG5jb25zdCBodHRwcyA9IHJlcXVpcmUoJ2h0dHBzJylcbmNvbnN0IGF4aW9zPXJlcXVpcmUoJ2F4aW9zJyk7XG5jb25zdCBjbGllbnRfY2VydCA9IGZzLnJlYWRGaWxlU3luYygnY2EtY3J0LnBlbScpXG52YXIgY29sb3JzID0gcmVxdWlyZSgnY29sb3JzJyk7XG5heGlvcy5kZWZhdWx0cy5odHRwc0FnZW50ID0gbmV3IGh0dHBzLkFnZW50KHtjYSA6IGNsaWVudF9jZXJ0LCBrZWVwQWxpdmU6IHRydWV9KVxuZXhwb3J0IGNsYXNzIEFkbWluQ29tbWFuZCBleHRlbmRzIENvbW1hbmQge1xuICBzdGF0aWMgZmxhZ3MgPSB7IFxuICAgIG5ld3VzZXI6IGZsYWdzLnN0cmluZyh7ZGVwZW5kc09uOlsncGFzc3cnXSxleGNsdXNpdmU6WyduZXdkYXRhJywndXNlcnN0YXR1cycsJ21vZHVzZXInXX0pLFxuICAgIG1vZHVzZXI6IGZsYWdzLnN0cmluZyh7ZGVwZW5kc09uOlsncGFzc3cnXSxleGNsdXNpdmU6WyduZXd1c2VyJywnbmV3ZGF0YScsJ3VzZXJzdGF0dXMnXX0pLFxuICAgIHBhc3N3OiBmbGFncy5zdHJpbmcoe2RlcGVuZHNPbjpbJ2VtYWlsJ119KSxcbiAgICBlbWFpbDogZmxhZ3Muc3RyaW5nKHtkZXBlbmRzT246WydxdW90YSddfSksXG4gICAgcXVvdGE6IGZsYWdzLnN0cmluZygpLFxuICAgIHVzZXJzdGF0dXM6IGZsYWdzLnN0cmluZyh7ZXhjbHVzaXZlOlsnbmV3ZGF0YScsJ25ld3VzZXInLCdtb2R1c2VyJ119KSxcbiAgICBuZXdkYXRhOiBmbGFncy5zdHJpbmcoe2RlcGVuZHNPbjpbJ3NvdXJjZSddLGV4Y2x1c2l2ZTpbJ3VzZXJzdGF0dXMnLCduZXd1c2VyJywnbW9kdXNlciddfSksXG4gICAgc291cmNlOiBmbGFncy5zdHJpbmcoKVxuICB9XG4gIGFzeW5jIHJ1bigpIHtcbiAgICBjb25zdCB7ZmxhZ3N9ID0gdGhpcy5wYXJzZShBZG1pbkNvbW1hbmQpOyBcblx0dmFyIGZzPXJlcXVpcmUoJ2ZzJyk7XG5cdHZhciBqd3Q9cmVxdWlyZSgnanNvbndlYnRva2VuJyk7XG5cdHZhciB0b2tlbiA9IGZzLnJlYWRGaWxlU3luYygnc29mdGVuZzE5YkFQSS50b2tlbicsJ3V0Zi04Jyk7XG5cdGF4aW9zLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uWydYLU9CU0VSVkFUT1JZLUFVVEgnXT10b2tlbjtcblx0Ly9hd2FpdCBjbGkuYW55a2V5KCk7XG5cdC8vY3JlYXRlIG5ldyB1c2VyXG5cdGlmIChgJHtmbGFncy5uZXd1c2VyfWAgIT09IFwidW5kZWZpbmVkXCIgJiYgYCR7ZmxhZ3MucGFzc3d9YCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBgJHtmbGFncy5lbWFpbH1gICE9PSBcInVuZGVmaW5lZFwiICYmIGAke2ZsYWdzLnF1b3RhfWAgIT09IFwidW5kZWZpbmVkXCIgKXtcblx0XHRcdGxldCBoYXNoID0gYmNyeXB0Lmhhc2hTeW5jKGAke2ZsYWdzLnBhc3N3fWAsMTApO1xuXHRcdFx0bGV0IGJvZHkgPSBuZXcgT2JqZWN0ICh7XG5cdFx0XHRcdHVzZXJuYW1lOiBgJHtmbGFncy5uZXd1c2VyfWAsXG5cdFx0XHRcdHBhc3N3OiBgJHtmbGFncy5wYXNzd31gLFxuXHRcdFx0XHRlbWFpbDogYCR7ZmxhZ3MuZW1haWx9YCxcblx0XHRcdFx0cXVvdGE6IGAke2ZsYWdzLnF1b3RhfWAgXG5cdFx0XHR9KVxuXHRcdFx0YXdhaXQgYXhpb3MucG9zdCgnaHR0cHM6Ly9sb2NhbGhvc3Q6ODc2NS9lbmVyZ3kvYXBpL0FkbWluL3VzZXJzJyxib2R5KTtcblx0XHRcdGNvbnNvbGUubG9nKFwiVXNlciBpbnNlcnRlZCBzdWNjZXNmdWxseVwiKTtcblx0XHRcdFx0XG5cdH1cblx0XG5cdC8vbW9kaWZ5IHVzZXJcblx0ZWxzZSBpZiAoYCR7ZmxhZ3MubW9kdXNlcn1gICE9PSBcInVuZGVmaW5lZFwiICYmIGAke2ZsYWdzLnBhc3N3fWAgIT09IFwidW5kZWZpbmVkXCIgJiYgYCR7ZmxhZ3MuZW1haWx9YCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBgJHtmbGFncy5xdW90YX1gICE9PSBcInVuZGVmaW5lZFwiICl7XG5cdFx0bGV0IGJvZHkgPSBuZXcgT2JqZWN0ICh7XG5cdFx0XHRcdHVzZXJuYW1lOiBgJHtmbGFncy5tb2R1c2VyfWAsXG5cdFx0XHRcdHBhc3N3OiBgJHtmbGFncy5wYXNzd31gLFxuXHRcdFx0XHRlbWFpbDogYCR7ZmxhZ3MuZW1haWx9YCxcblx0XHRcdFx0cXVvdGE6IGAke2ZsYWdzLnF1b3RhfWAgXG5cdFx0fSlcblx0XHRhd2FpdCBheGlvcy5wdXQoJ2h0dHBzOi8vbG9jYWxob3N0Ojg3NjUvZW5lcmd5L2FwaS9BZG1pbi91c2Vycy8nICtgJHtmbGFncy5tb2R1c2VyfWAsYm9keSk7XG5cdFx0Y29uc29sZS5sb2coJ1VzZXIgbW9kaWZpZWQgc3VjY2VzZnVsbHknKTtcblx0fVxuXHRcblx0XG5cdC8vZ2V0IHVzZXJzdGF0dXNcblx0ZWxzZSBpZiAoYCR7ZmxhZ3MudXNlcnN0YXR1c31gICE9PSBcInVuZGVmaW5lZFwiKXtcblx0XHRjb25zdCBkYXRhPWF3YWl0IGF4aW9zLmdldCgnaHR0cHM6Ly9sb2NhbGhvc3Q6ODc2NS9lbmVyZ3kvYXBpL0FkbWluL3VzZXJzLycgK2Ake2ZsYWdzLnVzZXJzdGF0dXN9YCk7XHRcblx0XHRjb25zb2xlLmxvZyhkYXRhLmRhdGEpO1xuXHR9XG5cblx0XG5cdC8vaW5zZXJ0IG5ldyBkYXRhXG5cdGVsc2UgaWYgKGAke2ZsYWdzLm5ld2RhdGF9YCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBgJHtmbGFncy5zb3VyY2V9YCAhPT0gXCJ1bmRlZmluZWRcIiApe1xuXHRcdHZhciBjc3Y9cmVxdWlyZSgnY3N2LXBhcnNlcicpO1xuXHRcdHZhciBGb3JtRGF0YT1yZXF1aXJlKCdmb3JtLWRhdGEnKTtcblx0XHRjb25zdCBmb3JtX2RhdGEgPSBuZXcgRm9ybURhdGEoKTtcblx0XHR2YXIgZGF0YSA9IFtdO1xuXHRcdGZvcm1fZGF0YS5hcHBlbmQoXCJmaWxlXCIsIGZzLmNyZWF0ZVJlYWRTdHJlYW0oYCR7ZmxhZ3Muc291cmNlfWApKTtcblx0XHRmb3JtX2RhdGEucGlwZShjc3YoKSkub24oJ2RhdGEnLGZ1bmN0aW9uKHJvdzphbnkpeyBkYXRhLnB1c2gocm93KSB9KS5vbignZW5kJyxmdW5jdGlvbigpe2NvbnNvbGUubG9nKCdEYXRhIExvYWRlZCcpfSk7XG5cdFx0bGV0IGhlYWRlciA9IGZvcm1fZGF0YS5nZXRIZWFkZXJzKCk7XG5cdFx0Y29uc3QgY29uZmlnID0ge1xuXHRcdFx0bWV0aG9kOiAnUE9TVCcsXG5cdFx0XHRwb3J0Ojg3NjUsXG5cdFx0XHRoZWFkZXJzOiB7XG5cdFx0XHRcdFwieC1vYnNlcnZhdG9yeS1hdXRoXCI6dG9rZW4sXG5cdFx0XHRcdGhlYWRlclxuXHRcdFx0fSxcbiBcdFx0XHRtYXhDb250ZW50TGVuZ3RoOjUyNDIyODg5MFxuXHRcdH07XG5cblx0XHRyZXR1cm4gYXdhaXQgYXhpb3MucG9zdCgnaHR0cHM6Ly9sb2NhbGhvc3Q6ODc2NS9lbmVyZ3kvYXBpL0FkbWluLycgKyBgJHtmbGFncy5uZXdkYXRhfWAsIGZvcm1fZGF0YSxjb25maWcpO1xuXHR9XG5cdGVsc2UgY29uc29sZS5sb2coXCJVbnN1Y2Nlc2Z1bFwiICsgYCR7ZmxhZ3MubmV3dXNlcn1gLGAke2ZsYWdzLnBhc3N3fWAsYCR7ZmxhZ3MuZW1haWx9YCxgJHtmbGFncy5xdW90YX1gKTsgIFxuICB9XG59XG5cblxuXG5cblxuXG4iXX0="]}